// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Knoq.Models
{
    /// <summary>
    /// 部屋を作る
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RequestEventInstant : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>編集権を持つユーザー</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? Admins { get; set; }
#nullable restore
#else
        public List<Guid?> Admins { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The groupId property</summary>
        public Guid? GroupId { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>グループ外のユーザーが参加予定を出来るか</summary>
        public bool? Open { get; set; }
        /// <summary>The place property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Place { get; set; }
#nullable restore
#else
        public string Place { get; set; }
#endif
        /// <summary>部屋の共用をするか</summary>
        public bool? SharedRoom { get; set; }
        /// <summary>The tags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Knoq.Models.RequestEventInstant_tags>? Tags { get; set; }
#nullable restore
#else
        public List<global::Knoq.Models.RequestEventInstant_tags> Tags { get; set; }
#endif
        /// <summary>The timeEnd property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeEnd { get; set; }
#nullable restore
#else
        public string TimeEnd { get; set; }
#endif
        /// <summary>The timeStart property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeStart { get; set; }
#nullable restore
#else
        public string TimeStart { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Knoq.Models.RequestEventInstant"/> and sets the default values.
        /// </summary>
        public RequestEventInstant()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Knoq.Models.RequestEventInstant"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Knoq.Models.RequestEventInstant CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Knoq.Models.RequestEventInstant();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "admins", n => { Admins = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "groupId", n => { GroupId = n.GetGuidValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "open", n => { Open = n.GetBoolValue(); } },
                { "place", n => { Place = n.GetStringValue(); } },
                { "sharedRoom", n => { SharedRoom = n.GetBoolValue(); } },
                { "tags", n => { Tags = n.GetCollectionOfObjectValues<global::Knoq.Models.RequestEventInstant_tags>(global::Knoq.Models.RequestEventInstant_tags.CreateFromDiscriminatorValue)?.AsList(); } },
                { "timeEnd", n => { TimeEnd = n.GetStringValue(); } },
                { "timeStart", n => { TimeStart = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<Guid?>("admins", Admins);
            writer.WriteStringValue("description", Description);
            writer.WriteGuidValue("groupId", GroupId);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("open", Open);
            writer.WriteStringValue("place", Place);
            writer.WriteBoolValue("sharedRoom", SharedRoom);
            writer.WriteCollectionOfObjectValues<global::Knoq.Models.RequestEventInstant_tags>("tags", Tags);
            writer.WriteStringValue("timeEnd", TimeEnd);
            writer.WriteStringValue("timeStart", TimeStart);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
