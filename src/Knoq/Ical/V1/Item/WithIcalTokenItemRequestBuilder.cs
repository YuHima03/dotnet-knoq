// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Knoq.Ical.V1.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \ical\v1\{icalToken}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithIcalTokenItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithIcalTokenItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/ical/v1/{icalToken}{?q*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithIcalTokenItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/ical/v1/{icalToken}{?q*}", rawUrl)
        {
        }
        /// <summary>
        /// Icalを取得
        /// </summary>
        /// <returns>A <see cref="Stream"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Stream?> GetAsync(Action<RequestConfiguration<global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder.WithIcalTokenItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Stream> GetAsync(Action<RequestConfiguration<global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder.WithIcalTokenItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendPrimitiveAsync<Stream>(requestInfo, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Icalを取得
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder.WithIcalTokenItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder.WithIcalTokenItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "text/calendar");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Icalを取得
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithIcalTokenItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Syntax: &lt;br&gt; top  : ε | expr, expr : term ( ( &quot;||&quot; | &quot;&amp;&amp;&quot; ) term)*&lt;br&gt; term : cmp | &quot;(&quot; expr &quot;)&quot;&lt;br&gt; cmp  : Attr ( &quot;==&quot; | &quot;!=&quot; ) UUID&lt;br&gt; Attr : &quot;event&quot; | &quot;user&quot; | &quot;group&quot; | &quot;tag&quot; </summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("q")]
            public string? Q { get; set; }
#nullable restore
#else
            [QueryParameter("q")]
            public string Q { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithIcalTokenItemRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Knoq.Ical.V1.Item.WithIcalTokenItemRequestBuilder.WithIcalTokenItemRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
