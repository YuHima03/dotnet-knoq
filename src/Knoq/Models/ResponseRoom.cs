// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Knoq.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ResponseRoom : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>編集権を持つユーザー</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? Admins { get; set; }
#nullable restore
#else
        public List<Guid?> Admins { get; set; }
#endif
        /// <summary>The createdAt property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The createdBy property</summary>
        public Guid? CreatedBy { get; set; }
        /// <summary>どのイベントも使用していない時間帯</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Knoq.Models.Duration>? FreeTimes { get; set; }
#nullable restore
#else
        public List<global::Knoq.Models.Duration> FreeTimes { get; set; }
#endif
        /// <summary>The place property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Place { get; set; }
#nullable restore
#else
        public string Place { get; set; }
#endif
        /// <summary>The roomId property</summary>
        public Guid? RoomId { get; set; }
        /// <summary>部屋を共用すれば、使用できる時間帯</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Knoq.Models.Duration>? SharedTimes { get; set; }
#nullable restore
#else
        public List<global::Knoq.Models.Duration> SharedTimes { get; set; }
#endif
        /// <summary>The timeEnd property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeEnd { get; set; }
#nullable restore
#else
        public string TimeEnd { get; set; }
#endif
        /// <summary>The timeStart property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeStart { get; set; }
#nullable restore
#else
        public string TimeStart { get; set; }
#endif
        /// <summary>The updatedAt property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; set; }
#nullable restore
#else
        public string UpdatedAt { get; set; }
#endif
        /// <summary>部屋が使えることを保証する</summary>
        public bool? Verified { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Knoq.Models.ResponseRoom"/> and sets the default values.
        /// </summary>
        public ResponseRoom()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Knoq.Models.ResponseRoom"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Knoq.Models.ResponseRoom CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Knoq.Models.ResponseRoom();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "admins", n => { Admins = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "createdAt", n => { CreatedAt = n.GetStringValue(); } },
                { "createdBy", n => { CreatedBy = n.GetGuidValue(); } },
                { "freeTimes", n => { FreeTimes = n.GetCollectionOfObjectValues<global::Knoq.Models.Duration>(global::Knoq.Models.Duration.CreateFromDiscriminatorValue)?.AsList(); } },
                { "place", n => { Place = n.GetStringValue(); } },
                { "roomId", n => { RoomId = n.GetGuidValue(); } },
                { "sharedTimes", n => { SharedTimes = n.GetCollectionOfObjectValues<global::Knoq.Models.Duration>(global::Knoq.Models.Duration.CreateFromDiscriminatorValue)?.AsList(); } },
                { "timeEnd", n => { TimeEnd = n.GetStringValue(); } },
                { "timeStart", n => { TimeStart = n.GetStringValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetStringValue(); } },
                { "verified", n => { Verified = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<Guid?>("admins", Admins);
            writer.WriteStringValue("createdAt", CreatedAt);
            writer.WriteGuidValue("createdBy", CreatedBy);
            writer.WriteCollectionOfObjectValues<global::Knoq.Models.Duration>("freeTimes", FreeTimes);
            writer.WriteStringValue("place", Place);
            writer.WriteGuidValue("roomId", RoomId);
            writer.WriteCollectionOfObjectValues<global::Knoq.Models.Duration>("sharedTimes", SharedTimes);
            writer.WriteStringValue("timeEnd", TimeEnd);
            writer.WriteStringValue("timeStart", TimeStart);
            writer.WriteStringValue("updatedAt", UpdatedAt);
            writer.WriteBoolValue("verified", Verified);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
